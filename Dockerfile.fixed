# ===== DOCKERFILE ARREGLADO PARA PRODUCCIÓN =====
# Soluciona el problema de Puppeteer/Chromium en ARM64

FROM node:20-slim

# Instalar dependencias del sistema Y Chromium
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    curl \
    lsof \
    procps \
    net-tools \
    ffmpeg \
    python3 python3-venv python3-pip \
    chromium \
    chromium-sandbox \
 && python3 -m venv /opt/venv \
 && /opt/venv/bin/pip install --no-cache-dir openai-whisper \
 && rm -rf /var/lib/apt/lists/*

# Configurar directorio de trabajo
WORKDIR /app

# Variables de entorno para evitar descargas de Puppeteer
ENV NODE_ENV=production
ENV PORT=5001
ENV HOST=0.0.0.0
ENV NEXT_TELEMETRY_DISABLED=1
ENV PUPPETEER_SKIP_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar dependencias de producción solamente
RUN npm ci --omit=dev --ignore-scripts

# Crear directorios necesarios
RUN mkdir -p uploads .next whatsapp_sessions

# Copiar TODA la aplicación compilada (dist/) y archivos necesarios
COPY dist/ ./dist/
COPY app/ ./app/
COPY lib/ ./lib/
COPY config/ ./config/
COPY scripts/ ./scripts/

# Copiar scripts de inicio
COPY docker-start.sh docker-start-fast.sh docker-start-robust.sh ./
RUN chmod +x docker-start.sh docker-start-fast.sh docker-start-robust.sh

# Exponer puertos
EXPOSE 5001 3000

# Health check optimizado
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:5001/ping || exit 1

# Comando por defecto (arranque ultra rápido)
CMD ["./docker-start-fast.sh"]
