#!/bin/bash

echo "üîç DIAGN√ìSTICO: ¬øPor qu√© solo pasa en M√©xico?"
echo "============================================="

# Funci√≥n para simular requests desde diferentes pa√≠ses
test_geo_response() {
    local country=$1
    local country_name=$2
    
    echo ""
    echo "üåç Testing from $country_name ($country):"
    
    # Test DNS resolution
    echo "   DNS Resolution:"
    nslookup app.uniclick.io | grep -A1 "Name:" | head -2
    
    # Test con headers simulados
    echo "   HTTP Response:"
    response=$(curl -s -I -H "cf-ipcountry: $country" \
                     -H "accept-language: es-MX,es;q=0.9" \
                     -H "user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36" \
                     https://app.uniclick.io | head -10)
    
    # Extraer headers importantes
    echo "$response" | grep -i "server:"
    echo "$response" | grep -i "content-type:"
    echo "$response" | grep -i "cache-control:"
    echo "$response" | grep -i "cf-ray:"
    echo "$response" | grep -i "cf-cache-status:"
    
    # Verificar si devuelve HTML o JavaScript
    body=$(curl -s -H "cf-ipcountry: $country" \
               -H "user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36" \
               https://app.uniclick.io | head -c 500)
    
    if echo "$body" | grep -q "React.fragment\|static/chunks"; then
        echo "   ‚ùå PROBLEMA: Devuelve JavaScript crudo"
    elif echo "$body" | grep -q "<!DOCTYPE html\|<html"; then
        echo "   ‚úÖ OK: Devuelve HTML"
    else
        echo "   ‚ö†Ô∏è  UNKNOWN: Respuesta no identificada"
    fi
    
    echo "   Primeros 100 caracteres:"
    echo "   $body" | head -c 100
    echo ""
}

# Probar desde diferentes pa√≠ses
echo "üß™ Probando desde diferentes pa√≠ses..."
test_geo_response "US" "Estados Unidos"
test_geo_response "MX" "M√©xico"
test_geo_response "CA" "Canad√°"
test_geo_response "BR" "Brasil"
test_geo_response "ES" "Espa√±a"

echo ""
echo "üîç An√°lisis de CloudFront:"
echo "========================="

# Verificar edge locations
echo "üìç Edge Locations detectadas:"
for country in US MX CA BR ES; do
    cf_ray=$(curl -s -I -H "cf-ipcountry: $country" https://app.uniclick.io | grep -i "cf-ray:" | cut -d' ' -f2)
    echo "$country: $cf_ray"
done

echo ""
echo "üèóÔ∏è Verificando configuraci√≥n de dominios:"
echo "========================================"

# Verificar configuraci√≥n DNS
echo "üîç DNS Records:"
dig app.uniclick.io A +short
dig app.uniclick.io CNAME +short

echo ""
echo "üåê Verificando desde diferentes resolvers:"
echo "US Google DNS (8.8.8.8):"
dig @8.8.8.8 app.uniclick.io A +short

echo "Cloudflare DNS (1.1.1.1):"
dig @1.1.1.1 app.uniclick.io A +short

echo ""
echo "üéØ DIAGN√ìSTICO AVANZADO:"
echo "======================="

# Verificar headers espec√≠ficos que CloudFront env√≠a
echo "üìã Headers de CloudFront desde M√©xico:"
curl -s -I -H "cf-ipcountry: MX" https://app.uniclick.io | grep -i "cf-"

echo ""
echo "üìã Headers de CloudFront desde US:"
curl -s -I -H "cf-ipcountry: US" https://app.uniclick.io | grep -i "cf-"

echo ""
echo "üí° POSIBLES CAUSAS:"
echo "=================="
echo "1. üåç Geo-blocking: CloudFront puede tener restricciones por pa√≠s"
echo "2. üèóÔ∏è Edge Location: M√©xico puede usar un edge location diferente"
echo "3. üí∞ Price Class: CloudFront puede excluir M√©xico de ciertos tiers"
echo "4. ‚öôÔ∏è Cache Behavior: Reglas de cache espec√≠ficas para M√©xico"
echo "5. üîÑ Origin Routing: M√©xico puede estar ruteado a un origen diferente"
echo ""
echo "üìû PR√ìXIMOS PASOS:"
echo "=================="
echo "1. Verificar configuraci√≥n de CloudFront en AWS Console"
echo "2. Revisar Geographic Restrictions en CloudFront"
echo "3. Verificar Cache Behaviors por regi√≥n"
echo "4. Contactar soporte de CloudFront si es necesario"
echo ""
echo "üîó Enlaces √∫tiles:"
echo "- CloudFront Console: https://console.aws.amazon.com/cloudfront"
echo "- Tu Distribution ID: E1K074YQD62Q2W" 