# Dockerfile optimizado para producción
FROM node:20-slim

# Instala librerías del sistema necesarias
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    curl \
    lsof \
    procps \
    net-tools \
    libxkbcommon0 \
    libxkbcommon-x11-0 \
    libnss3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm-dev \
    libgbm-dev \
    libglib2.0-0 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxcursor1 \
    libxss1 \
    libxext6 \
    libxshmfence-dev \
    libasound2 \
    libpangocairo-1.0-0 \
    libxrender1 \
    fonts-liberation \
    libappindicator3-1 \
    xdg-utils \
    ffmpeg \
    libavcodec-extra \
    python3 python3-venv python3-pip \
 && python3 -m venv /opt/venv \
 && /opt/venv/bin/pip install --no-cache-dir openai-whisper yt-dlp \
 && rm -rf /var/lib/apt/lists/*

ENV PATH="/opt/venv/bin:$PATH"

# Crea y define /app como directorio de trabajo
WORKDIR /app

# Copia los archivos de dependencias
COPY package*.json ./
COPY tsconfig.json ./

# Skip Puppeteer download para evitar errores en ARM64
ENV PUPPETEER_SKIP_DOWNLOAD=true
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Instala dependencias
RUN npm ci --only=production

# Copia el código fuente
COPY . .

# Compila el código TypeScript
RUN npm run build

# Copia el archivo de credenciales de Google Vision
COPY brave-cistern-441722-a9-8aa519ef966f.json /app/

# Crea directorios necesarios
RUN mkdir -p /app/temp /app/uploads /app/.next && \
    chmod 777 /app/temp /app/uploads /app/.next

# Variables de entorno para producción
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=5001
ENV HOST=0.0.0.0

# Expón el puerto
EXPOSE 5001

# Copia los scripts de inicio
COPY docker-start.sh /app/
COPY docker-start-robust.sh /app/
COPY docker-start-fast.sh /app/
RUN chmod +x /app/docker-start.sh /app/docker-start-robust.sh /app/docker-start-fast.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5001/api/health || exit 1

# Comando de inicio
CMD ["./docker-start-fast.sh"]