#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';
import { processInstructionsWithAI } from './dist/services/openaiService.js';
import dotenv from 'dotenv';

// Cargar variables de entorno
dotenv.config({ path: '/Users/amosmendez/Desktop/Uniclcik.io/api/.env' });

console.log('üß™ Probando procesamiento de instrucciones con IA...');

const testText = `MANUAL DE INSTRUCCIONES PARA CHATBOT DE IA

Este es un manual detallado para el chatbot de IA.
Debes responder siempre de manera amigable y profesional.
Cuando un usuario pregunte sobre precios, debes explicar
que los precios var√≠an seg√∫n la configuraci√≥n.
Si preguntan sobre servicios, debes mencionar
que ofrecemos soluciones integrales de marketing.
Recuerda siempre ser cort√©s y directo en tus respuestas.`;

async function testAIProcessing() {
  try {
    console.log('\nüìÑ Texto original:');
    console.log(testText);
    console.log(`\nüìä Longitud: ${testText.length} caracteres`);
    
    console.log('\nü§ñ Procesando con IA...');
    
    const improvedInstructions = await processInstructionsWithAI(
      testText,
      'Amos', // Nombre de la personalidad
      'Business' // Categor√≠a
    );
    
    console.log('\n‚ú® Instrucciones mejoradas:');
    console.log('=' .repeat(60));
    console.log(improvedInstructions);
    console.log('=' .repeat(60));
    
    console.log(`\nüìà Mejora: ${improvedInstructions.length} caracteres (${((improvedInstructions.length / testText.length) * 100).toFixed(1)}% del original)`);
    
    // Verificar que se mantiene la informaci√≥n
    const originalWords = testText.toLowerCase().split(/\s+/).filter(w => w.length > 3);
    const improvedWords = improvedInstructions.toLowerCase().split(/\s+/).filter(w => w.length > 3);
    
    const preservedWords = originalWords.filter(word => 
      improvedWords.some(iw => iw.includes(word) || word.includes(iw))
    );
    
    console.log(`\nüîç An√°lisis de preservaci√≥n de contenido:`);
    console.log(`   - Palabras originales importantes: ${originalWords.length}`);
    console.log(`   - Palabras preservadas: ${preservedWords.length}`);
    console.log(`   - Porcentaje preservado: ${((preservedWords.length / originalWords.length) * 100).toFixed(1)}%`);
    
    if (preservedWords.length / originalWords.length > 0.7) {
      console.log('‚úÖ Buena preservaci√≥n de contenido');
    } else {
      console.log('‚ö†Ô∏è Posible p√©rdida de informaci√≥n');
    }
    
  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.message);
  }
}

// Ejecutar prueba
testAIProcessing();
